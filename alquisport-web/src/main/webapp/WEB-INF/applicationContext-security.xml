<?xml version="1.0" encoding="UTF-8"?>

<!-- - Sample namespace-based configuration - -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

		
	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true">
		<intercept-url pattern="/superadmin/**" access="hasRole('superadmin')" />
		<intercept-url pattern="/insdeportiva/**" access="hasRole('admin')" />
		<intercept-url pattern="/user/**" access="isAuthenticated()" />
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-processing-url="/j_spring_security_check"
			login-page='/login.xhtml' default-target-url='/index.xhtml'
			always-use-default-target='true' authentication-failure-url="/login.xhtml?error=true" />
		<logout logout-success-url="/logout.xhtml" />
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/timeout.xhtml">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>

	</http>

	<!-- Usernames/Passwords are superadmin/koala user/emu admin/wombat peter/opal -->
	
	<authentication-manager>
		  <authentication-provider>
		  	<password-encoder hash="md5" />
		    <jdbc-user-service data-source-ref="dataSource"/>
		   </authentication-provider>
	</authentication-manager>
	
</beans:beans>
